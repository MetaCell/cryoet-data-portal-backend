stack:
  global:
    replicaCount: 2
    autoscaling:
      enabled: false
    service:
      port: 9009
    env:
      - name: PYTHONPATH
        value: .
      - name: CERBOS_URL
        value: http://localhost:3692
      - name: DEFAULT_UPLOAD_BUCKET
        value: local-bucket
      - name: DEFAULT_UPLOAD_PROTOCOL
        value: s3
      - name: OUTPUT_S3_PREFIX
        value: platformics
      - name: AWS_REGION
        value: us-west-2
      - name: AWS_ACCESS_KEY_ID
        value: test
      - name: AWS_SECRET_ACCESS_KEY
        value: test
      # TODO - these are keypairs for testing only! Do not use in prod!!
      - name: JWK_PUBLIC_KEY_FILE
        value: /var/keys/public_key.pem
      - name: JWK_PRIVATE_KEY_FILE
        value: /var/keys/private_key.pem
    volumeMounts:
      - mountPath: /var/policies
        name: cerbos-policies
        readOnly: false
      - mountPath: /var/keys
        name: keys
        readOnly: false
    volumes:
      - name: cerbos-policies
        emptyDir:
          sizeLimit: 50Mi
      - name: keys
        emptyDir:
          sizeLimit: 10Mi
  services:
    apiv2:
      image:
        repository: 533267185808.dkr.ecr.us-west-2.amazonaws.com/core-platform/cryoet-data-portal-backend/apiv2
      sidecars:
        - name: cerbos
          image: ghcr.io/cerbos/cerbos:0.29.0
          command: ["cerbos"]
          args: ["server", "--config", "/var/policies/cerbos/config.yaml"]
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3692
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/policies
              name: cerbos-policies
              readOnly: false
